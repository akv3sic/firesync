@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserService UserService

@using FireSync.Services
@using FireSync.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row px-4">
            <MudMenu>
                <ActivatorContent>
                    <MudAvatar Color="Color.Primary" Size="Size.Medium">@initials</MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem Href="Account/Manage">
                        Moj račun
                    </MudMenuItem>

                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <button type="submit" class="transparent-button">
                            <MudMenuItem>Odjava</MudMenuItem>
                        </button>
                    </form>
                </ChildContent>
            </MudMenu>
</div>

@code {
    private string initials = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var userId = user.Claims.FirstOrDefault(c => c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;
            if (!string.IsNullOrEmpty(userId))
            {
                initials = await UserService.GetUserInitialsAsync(userId);
            }
        }
    }
}
