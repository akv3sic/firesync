@page "/interventions"

@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IInterventionService InterventionService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

@using FireSync.Components.Shared
@using FireSync.DTOs.Interventions
@using FireSync.Enums
@using FireSync.Services.Interfaces

<PageTitle>Intervencije</PageTitle>

<AuthorizeView Roles="@(nameof(Roles.Admin))">
<Authorized>
    <MudGrid>
        <MudItem xs="12" sm="12" md="12" lg="12" xl="12" Class="mx-auto">
            <MudPaper Elevation="0" Padding="0" Class="mb-4">
                <MudGrid>
                    <MudItem xs="12" sm="6" md="6" lg="6" xl="6" Class="d-flex align-center gap-15">
                        <MudText Typo="Typo.h5">Pregled intervencija (@(paginationMetadata?.TotalItemCount ?? 0))</MudText>
                        @if (selectedInterventions.Count > 0)
                        {
                            <MudPaper Elevation="2" Class="py-1 px-2">
                                <MudIconButton Icon="@Icons.Material.Outlined.Remove" Color="Color.Inherit" OnClick="@(() => DeleteIntervention(selectedInterventions.First()))" />
                            </MudPaper>
                        }
                    </MudItem>
                </MudGrid>
            </MudPaper>

            @if ((interventions == null || interventions.Count == 0))
            {
                @* Empty view. There are no interventions *@
                <MudAlert Severity="Severity.Info" Elevation="0" Icon="@Icons.Material.Filled.Info">
                    Nema intervencija za prikaz.
                </MudAlert>
            }
            else
            {
            <MudDataGrid T="InterventionOutputDto" Items="interventions" Filterable="false" SortMode="@SortMode.Single" Groupable="false" MultiSelection="false" FooterClass="d-none"
                         @bind-SelectedItems="selectedInterventions" Hover="true" RowClick="@RowClicked" RowClass="cursor-pointer">
                <Columns>
                    <SelectColumn T="InterventionOutputDto" />
                    <PropertyColumn Property="x => x.Title" Title="Naslov" />
                    <PropertyColumn Property="x => x.Description" Title="Opis" />
                    <PropertyColumn Property="x => x.StartTime" Title="Početno vrijeme" />
                </Columns>
            </MudDataGrid>

            @* Pagination *@
            <div class="d-flex justify-center my-4">
                <MudPagination Count="pagesCount" @bind-Selected="currentPage" />
            </div>
            }
        </MudItem>
    </MudGrid>
</Authorized>
<NotAuthorized>
    <UnauthorizedAlert/>
</NotAuthorized>
</AuthorizeView>

<MudElement Class="fab-wrapper">
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="OpenAddNewInterventionDialog" Size="Size.Medium" />
</MudElement>

@code {
    private List<InterventionOutputDto> interventions = new List<InterventionOutputDto>();
    private HashSet<InterventionOutputDto> selectedInterventions = new HashSet<InterventionOutputDto>();

    #region Pagination
    private PaginationMetadata paginationMetadata;
    private int pagesCount => paginationMetadata.TotalPageCount;
    private int _currentPage = 1;

    private int currentPage
    {
        get => _currentPage;
        set
        {
            if (_currentPage != value)
            {
                _currentPage = value;
                LoadInterventions();
            }
        }
    }
    #endregion

    protected override async Task OnInitializedAsync()
    {
        await LoadInterventions();
    }

    private async Task LoadInterventions()
    {
        var result = await InterventionService.GetAllInterventionsAsync(currentPage);
        interventions = result.Item1.ToList();
        paginationMetadata = result.Item2;
        StateHasChanged();
    }

    private void RowClicked(DataGridRowClickEventArgs<InterventionOutputDto> args)
    {
        GoToInterventionDetailsPage(args.Item.Id);
    }

    private void GoToInterventionDetailsPage(Guid interventionId)
    {
        NavigationManager.NavigateTo($"/interventions/{interventionId}");
    }

    private async void OpenAddNewInterventionDialog()
    {
        var dialog = DialogService.Show<AddInterventionDialog>("Dodaj novu intervenciju");
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            await LoadInterventions();
        }
    }

    private async void DeleteIntervention(InterventionOutputDto intervention)
    {
        // TODO: Implement deletion of intervention
    }
}
