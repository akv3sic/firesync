@page "/interventions"

@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IInterventionService InterventionService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

@using FireSync.Components.Shared
@using FireSync.DTOs.Interventions
@using FireSync.Enums
@using FireSync.Services.Interfaces

<PageTitle>Intervencije</PageTitle>

<AuthorizeView Roles="@(nameof(Roles.Admin))">
    <Authorized>
        <MudGrid>
            <MudItem xs="12" sm="12" md="12" lg="12" xl="12" Class="mx-auto">
                <MudPaper Elevation="0" Padding="0" Class="mb-4">
                    <MudGrid>
                        <MudItem xs="12" sm="6" md="6" lg="6" xl="6" Class="d-flex align-center gap-15">
                            <MudText Typo="Typo.h5">Pregled intervencija (@(interventions?.Count ?? 0))</MudText>
                            @if (selectedInterventions.Count > 0)
                            {
                                <MudPaper Elevation="2" Class="py-1 px-2">
                                    <MudIconButton Icon="@Icons.Material.Outlined.Remove" Color="Color.Inherit" OnClick="@(() => DeleteIntervention(selectedInterventions.First()))" />
                                </MudPaper>
                            }
                        </MudItem>
                    </MudGrid>
                </MudPaper>
                <MudDataGrid T="InterventionOutputDto" Items="interventions" Filterable="false" SortMode="@SortMode.Single" Groupable="false" MultiSelection="false" FooterClass="d-none"
                             @bind-SelectedItems="selectedInterventions" Hover="true" RowClick="@RowClicked" RowClass="cursor-pointer">
                    <Columns>
                        <SelectColumn T="InterventionOutputDto" />
                        <PropertyColumn Property="x => x.Title" Title="Naslov" />
                        <PropertyColumn Property="x => x.Description" Title="Opis" />
                        <PropertyColumn Property="x => x.StartTime" Title="Početno vrijeme" />
                    </Columns>
                </MudDataGrid>
            </MudItem>
        </MudGrid>
    </Authorized>
    <NotAuthorized>
        <UnauthorizedAlert/>
    </NotAuthorized>
</AuthorizeView>

<MudElement Class="fab-wrapper">
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="OpenAddNewInterventionDialog" Size="Size.Medium" />
</MudElement>

@code {
    private List<InterventionOutputDto> interventions = new List<InterventionOutputDto>();
    private HashSet<InterventionOutputDto> selectedInterventions = new HashSet<InterventionOutputDto>();

    protected override async Task OnInitializedAsync()
    {
        await LoadInterventions();
    }

    private async Task LoadInterventions()
    {
        interventions = await InterventionService.GetAllInterventionsAsync();
        StateHasChanged();
    }

    private void RowClicked(DataGridRowClickEventArgs<InterventionOutputDto> args)
    {
        GoToInterventionDetailsPage(args.Item.Id);
    }

    private void GoToInterventionDetailsPage(Guid interventionId)
    {
        NavigationManager.NavigateTo($"/interventions/{interventionId}");
    }

    private async void OpenAddNewInterventionDialog()
    {
        // TODO: Implement opening of dialog for adding new intervention
    }

    private async void DeleteIntervention(InterventionOutputDto intervention)
    {
        // TODO: Implement deletion of intervention
    }
}
