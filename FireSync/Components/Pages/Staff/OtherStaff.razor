@page "/other-staff"

@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IStaffService StaffService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

@using FireSync.Components.Shared
@using FireSync.DTOs
@using FireSync.Enums
@using FireSync.Services.Interfaces

<PageTitle>Ostalo osoblje</PageTitle>

<AuthorizeView Roles="@(nameof(Roles.Admin))">
    <Authorized>
        <MudGrid>
            <MudItem xs="12" sm="12" md="12" lg="12" xl="12" Class="mx-auto">
                <MudPaper Elevation="0" Padding="0" Class="mb-4">
                    <MudGrid>
                        <MudItem xs="12" sm="6" md="6" lg="6" xl="6" Class="d-flex align-center gap-15">
                            <MudText Typo="Typo.h5">Pregled osoblja (@(paginationMetadata?.TotalItemCount ?? 0))</MudText>
                            @if (selectedStaff.Count > 0)
                            {
                                <MudPaper Elevation="2" Class="py-1 px-2">
                                    <MudIconButton Icon="@Icons.Material.Outlined.Delete" Color="Color.Inherit" OnClick="@(() => DeleteStaffMember(selectedStaff.First()))" />
                                </MudPaper>
                            }
                        </MudItem>
                    </MudGrid>
                </MudPaper>
                @if (nonFirefighters == null || !nonFirefighters.Any())
                {
                    <MudAlert Severity="Severity.Info" Elevation="0" Icon="@Icons.Material.Filled.Info">
                        Nema osoblja za prikaz.
                    </MudAlert>
                }
                else
                {
                    <MudDataGrid T="UserOutputDto" Items="nonFirefighters" Filterable="false" SortMode="@SortMode.Single" Groupable="false" MultiSelection="false"
                                 @bind-SelectedItems="selectedStaff" Hover="true" RowClick="@RowClicked" RowClass="cursor-pointer">
                        <Columns>
                            <SelectColumn T="UserOutputDto" />
                            <PropertyColumn Property="x => x.FirstName" Title="Ime" />
                            <PropertyColumn Property="x => x.LastName" Title="Prezime" />
                            <PropertyColumn Property="x => x.Email" Title="Email" />
                        <!-- roles -->
                            <TemplateColumn Title="Uloge">
                                <CellTemplate Context="staff">
                                    @foreach (var role in staff.Item.Roles)
                                    {
                                        <MudChip Color="Color.Primary" Text="@role.Trim()" />
                                    }
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                    </MudDataGrid>

                    <div class="d-flex justify-center my-4">
                        <MudPagination Count="paginationMetadata?.TotalPageCount ?? 0" @bind-Selected="currentPage" />
                    </div>
                }
            </MudItem>
        </MudGrid>
    </Authorized>
    <NotAuthorized>
        <UnauthorizedAlert />
    </NotAuthorized>
</AuthorizeView>

<MudElement Class="fab-wrapper">
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="OpenAddNewStaffDialog" Size="Size.Medium" />
</MudElement>

@code {
    private List<UserOutputDto> nonFirefighters = new();
    private HashSet<UserOutputDto> selectedStaff = new();
    private PaginationMetadata paginationMetadata;
    private int currentPage = 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadNonFirefighterStaff();
    }

    private async Task LoadNonFirefighterStaff()
    {
        var result = await StaffService.GetPagedNonFirefighterStaffAsync(currentPage, 10);
        nonFirefighters = result.Item1.ToList();
        paginationMetadata = result.Item2;
        StateHasChanged();
    }

    void RowClicked(DataGridRowClickEventArgs<UserOutputDto> args)
    {
        GoToStaffDetailsPage(args.Item.Id);
    }

    private void GoToStaffDetailsPage(Guid staffId)
    {
        NavigationManager.NavigateTo($"/staff/{staffId}");
    }


    private async void OpenAddNewStaffDialog()
    {
    }

    private async void DeleteStaffMember(UserOutputDto staff)
    {
    }
}
