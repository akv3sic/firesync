@using FireSync.Services.Interfaces
@inject ISnackbar Snackbar

<MudDialog Class="responsive-dialog-width">
    <DialogContent>
        <MudText>@Message</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" OnClick="Cancel">@CancelText</MudButton>
        <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="Submit">@ConfirmText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string Message { get; set; }

    [Parameter]
    public string ConfirmText { get; set; }

    [Parameter]
    public string CancelText { get; set; }

    [Parameter]
    public Func<Task> DeleteAction { get; set; }

    [Parameter]
    public string SuccessMessage { get; set; }

    [Parameter]
    public string ErrorMessage { get; set; }

    private async Task Submit()
    {
        try
        {
            if (DeleteAction != null)
            {
                await DeleteAction.Invoke();
                Snackbar.Add(SuccessMessage, Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add(ErrorMessage, Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
